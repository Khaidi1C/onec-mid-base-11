
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// ++ Юсупов Хайдар Рассчет суммы строки с учетом скидки 15.11.2023 
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки; 
	
	Скидка = Объект.ЮХ_СогласованнаяСкидка;
	Если НЕ ЗначениеЗаполнено(Скидка) Тогда
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	Иначе 
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
		ТекущиеДанные.Сумма = ТекущиеДанные.Сумма - (ТекущиеДанные.Сумма * Скидка / 100);	
	КонецЕсли;
    // -- Юсупов Хайдар 15.11.2023
	
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

// ++ Юсупов Хайдар 15.11.2023 
//@skip-check module-unused-method
&НаКлиенте
Процедура ЮХ_ПрименитьСкидку()
	
	ТекущиеДанныеТовар = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанныеУслуга = Элементы.Услуги.ТекущиеДанные;
	Если НЕ ТекущиеДанныеТовар = Неопределено Тогда
		РассчитатьСуммуВТЧ(ТекущиеДанныеТовар);
	КонецЕсли;	
	Если НЕ ТекущиеДанныеУслуга = Неопределено Тогда	
		РассчитатьСуммуВТЧ(ТекущиеДанныеУслуга);
	КонецЕсли;
	
КонецПроцедуры
// -- Юсупов Хайдар 15.11.2023

// ++ Юсупов Хайдар 15.11.2023
//@skip-check module-unused-method
&НаКлиенте
Асинх Процедура ЮХ_СогласованнаяСкидкаПриИзменении()
	
	Если Объект.Товары.Количество() = 0 И Объект.Услуги.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Перед применением скидки, необходимо добавить товар/услугу!";
		Сообщение.Сообщить();
	Иначе
		Ответ = Ждать ВопросАсинх("Изменен процент скидки! Произвести перерасчет с учетом скидки?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда 
			ТекущиеДанныеТовар = Элементы.Товары.ТекущиеДанные;
			ТекущиеДанныеУслуга = Элементы.Услуги.ТекущиеДанные;
			Если НЕ ТекущиеДанныеТовар = Неопределено Тогда
				РассчитатьСуммуВТЧ(ТекущиеДанныеТовар);
			КонецЕсли;	
			Если НЕ ТекущиеДанныеУслуга = Неопределено Тогда	
				РассчитатьСуммуВТЧ(ТекущиеДанныеУслуга);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
// -- Юсупов Хайдар 15.11.2023 

// ++ Юсупов Хайдар 15.11.2023 
&НаКлиенте
Процедура РассчитатьСуммуВТЧ(ТекущиеДанные)
	
	Скидка = Объект.ЮХ_СогласованнаяСкидка;
	Для каждого стрТовар Из Объект.Товары Цикл
		
		стрТовар.Сумма = стрТовар.Цена * стрТовар.Количество;
		стрТовар.Сумма = стрТовар.Сумма - (стрТовар.Сумма * Скидка / 100);	
		
	КонецЦикла;
	
	Для каждого стрУслуга Из Объект.Услуги Цикл
		
		стрУслуга.Сумма = стрУслуга.Цена * стрУслуга.Количество;
		стрУслуга.Сумма = стрУслуга.Сумма - (стрУслуга.Сумма * Скидка / 100);	
		
	КонецЦикла;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры
// -- Юсупов Хайдар 15.11.2023


#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
